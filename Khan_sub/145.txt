Transcript for: Example of closed line integral of conservative field | Multivariable Calculus | 
Let's see if we can apply some of our new tools to solve some line integrals.
So let's say we have a line integral along a closed curve I'm going to define the path in a second of <EXPRESSION>.
And then our curve <EXPRESSION> is going to be defined by the parameterization.
<EQUATION>, and <EQUATION>.
And this is valid for <EXPRESSION> between <EXPRESSION> and <EXPRESSION>.
So this is essentially a circle, a unit circle, in the xy plane, and we know how to solve these.
Let's see if we can use some of our discoveries in the last couple of videos to maybe simplify this process.
So the first thing you might say, hey, this looks like a line integral, but you have a <EXPRESSION> and <EXPRESSION>, I don't see a <EXPRESSION> here.
It's not clear to me that this is some type of even a vector line integral.
I don't see any of vectors.
What I want to do first, and the reason why I wanted to show you this example, is just to show you that this is just another form of writing really a vector line integral.
To show you that you just have to realize if I have some are <EXPRESSION> this is our curve.
I don't even write these functions in there.
I'm just going to write it's <EXPRESSION>.
We've seen several videos now that we can write <EXPRESSION> as being = <EXPRESSION>.
We've seen this multiple times.
And we've seen multiple times we want to get the differential <EXPRESSION>, we can just multiply everything times <EXPRESSION>.
And normally I just put a <EXPRESSION> here and a <EXPRESSION> there and get rid of this <EXPRESSION>.
But if you multiply everything times <EXPRESSION>, if you view the differentials as actual numbers, you can multiply and normally you can treat them like that.
Then you just get rid of all of the <EXPRESSION>.
So dr you could imagine = <EXPRESSION>.
So put that aside, and you might already see a pattern here.
So if we define our vector field <EXPRESSION>, as being = <EXPRESSION>, what is this thing? What is this thing over here? Well, what is <EXPRESSION> going to be? Dot products, you just multiply the corresponding components of our vectors and then add them up.
So it's going to be if you take this <EXPRESSION> and <EXPRESSION> it with that <EXPRESSION> you're going to get the <EXPRESSION> component, <EXPRESSION> I'll do it in the pink again plus the <EXPRESSION> component, the <EXPRESSION> component <EXPRESSION>.
That's the dot product.
And notice, this thing right here is identical to that thing right there.
So our line integral, just to put it in a form that we're familiar with, this is the same exact thing as the line integral over this curve <EXPRESSION>, this closed curve <EXPRESSION>, of this f maybe I'll write it in that magenta color, or actually it's more of a purple or pink color <EXPRESSION>.
That's what this line integral is, it's just a different way of writing it.
Now that you see it, in the future if you see in kind of this differential form, you'll immediately know OK, there's one vector field that this is its <EXPRESSION> component, this is its <EXPRESSION> component, dotting with the <EXPRESSION>.
This is the <EXPRESSION> component of <EXPRESSION> or the <EXPRESSION> component, and this is the <EXPRESSION> component or the <EXPRESSION> component of the <EXPRESSION>.
So you immediately know what the vector field is that we're taking a line integral of.
This is the x<EXPRESSION>, that's the <EXPRESSION>.
Now, let's ask ourselves a question.
Is <EXPRESSION> conservative? So is <EXPRESSION> = the gradient of some scalar field, we'll call it <EXPRESSION> is this the case? So let's assume it is and see if we can solve for a scalar field whose grade it really is <EXPRESSION>.
Then we know that <EXPRESSION> is conservative.
And then if <EXPRESSION> is conservative, and this is the whole reason we want to do it, that means that any closed loop, any line integral over a closed curve of <EXPRESSION> is going to be = <EXPRESSION> and we'd be done.
So if we can show this then the answer to this question or this question is going to be <EXPRESSION>.
We don't even have to mess with the cosine of <EXPRESSION> and the sign of <EXPRESSION> and all that.
Actually, we don't even have to take antiderivatives.
So let's see if we can find an <EXPRESSION> whose gradient = that right there.
So in order for <EXPRESSION> gradient to be that, that means that the partial derivative of our <EXPRESSION> with respect to <EXPRESSION> has got to be = that right there.
It's got to be = <EXPRESSION>.
And it also tells us that the partial derivative of <EXPRESSION> with respect to <EXPRESSION> has got to be = <EXPRESSION>.
And just as a review, if I have the gradient of any function, of any scalar field = the partial of <EXPRESSION> with respect to <EXPRESSION> with respect to <EXPRESSION>.
So that's why I'm just pattern matching.
I'm just saying well, gee, if this is the gradient of that, then this must be that, which I wrote down right here, and this must be that, which I wrote down here.
So let's see if I can find an f that satisfies both of these constraints.
So we could just take the antiderivative with respect to <EXPRESSION> on both sides remember, you just treat <EXPRESSION> like a constant or <EXPRESSION> like a constant it's just a number.
So then we could say that <EXPRESSION> = the antiderivative of <EXPRESSION> is <EXPRESSION>.
And then the antiderivative of <EXPRESSION> remember, this is with respect to <EXPRESSION>.
So you just treat it like a number.
That could just be the number <EXPRESSION>, or this could be the number <EXPRESSION>.
So this is just going to be that times <EXPRESSION>.
So <EXPRESSION>.
And then there could be some function of <EXPRESSION> here.
So plus some, I don't know, I'll call it <EXPRESSION>.
Because there could have been some function of <EXPRESSION> here.
If it's a pure function of <EXPRESSION>, when you take the derivative or the partial with respect to <EXPRESSION>, this would have disappeared.
So it would reappear when we take the antiderivative.
And just to be clear, let me make it clear that <EXPRESSION> is going to be a function of <EXPRESSION> and <EXPRESSION>.
So we just have the, I guess you could say the antiderivative with respect to <EXPRESSION>.
Let's see if we take the antiderivative with respect to <EXPRESSION> and then we can reconcile the two.
So based on this, <EXPRESSION>, <EXPRESSION> is going to have to look like so let's take the antiderivative with respect to <EXPRESSION> here.
So remember, you just treat <EXPRESSION> like it's just some number it could be a <EXPRESSION>, it could be an m, it could be a <EXPRESSION>.
It's just some number.
So if <EXPRESSION> is just some the antiderivative of <EXPRESSION> is <EXPRESSION>.
And if <EXPRESSION> is just a number there, the antiderivative of this with respect to <EXPRESSION> is just going to be <EXPRESSION>.
Don't believe me? Take the partial of this with respect to <EXPRESSION>.
Treat <EXPRESSION> like a constant you'll get <EXPRESSION> with no exponent there.
And, of course, if you took the antiderivative with respect to <EXPRESSION>, there might be some function of <EXPRESSION> here.
We were just basing it off of that information.
Now given that, this information says <EXPRESSION> is going to have to look something like this.
This information tells us <EXPRESSION> going to have to look something like that.
Let's see if there is an <EXPRESSION> that looks like both of them essentially.
So let's see.
On this one we have <EXPRESSION> here, we have an <EXPRESSION> there.
So good.
That looks good.
And it over here we have an <EXPRESSION> we have something that's a pure function of <EXPRESSION>.
And here we have something that is a pure function of <EXPRESSION>.
So these two things could be the same thing.
Then here we have a pure function of <EXPRESSION> that might be there, but it didn't really show up anywhere over here.
So we could just say hey, that's going to be <EXPRESSION>.
0 is a pure function of <EXPRESSION>.
You could have something called <EQUATION>.
And then we get that capital <EQUATION>.
And the gradient of this is going to be = <EXPRESSION>.
And we've already established that.
But just to hit the point home, let's take the gradient of it.
Just if you don't believe this little stuff that I did right there, let's take the gradient.
The gradient of <EXPRESSION> =, and sometimes people put a little vector there because you're getting a vector out of it.
You could put a little vector on top of that gradient sign.
The gradient of <EXPRESSION> is going to be what? The partial of this with respect to <EXPRESSION>.
So the partial of this with respect to <EXPRESSION>.
The derivative here is <EXPRESSION> is <EXPRESSION>.
So it's just <EXPRESSION> with respect to <EXPRESSION> is <EXPRESSION> with respect to <EXPRESSION>.
Well, the partial with respect to <EXPRESSION> of this <EXPRESSION>, partial with respect to <EXPRESSION> of this is <EXPRESSION> or <EXPRESSION>.
So it's <EXPRESSION>.
And this is exactly = <EXPRESSION>, our <EXPRESSION> that we wrote up there.
So we've established that <EXPRESSION> can definitely be written <EXPRESSION> is definitely the gradient of some potential scalar function there.
So f is conservative, and that tells us that this closed loop integral, line integral, of <EXPRESSION> is going to be = <EXPRESSION>.
And we are done.
We could even ignore the actual parameterization of the path.
